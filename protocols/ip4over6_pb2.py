# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ip4over6.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import protocol_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ip4over6.proto',
  package='OstProto',
  serialized_pb=_b('\n\x0eip4over6.proto\x12\x08OstProto\x1a\x0eprotocol.proto\"\n\n\x08Ip4over6:9\n\x08ip4over6\x12\x12.OstProto.Protocol\x18\xb0\x02 \x01(\x0b\x32\x12.OstProto.Ip4over6')
  ,
  dependencies=[protocol_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


IP4OVER6_FIELD_NUMBER = 304
ip4over6 = _descriptor.FieldDescriptor(
  name='ip4over6', full_name='OstProto.ip4over6', index=0,
  number=304, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)


_IP4OVER6 = _descriptor.Descriptor(
  name='Ip4over6',
  full_name='OstProto.Ip4over6',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=54,
)

DESCRIPTOR.message_types_by_name['Ip4over6'] = _IP4OVER6
DESCRIPTOR.extensions_by_name['ip4over6'] = ip4over6

Ip4over6 = _reflection.GeneratedProtocolMessageType('Ip4over6', (_message.Message,), dict(
  DESCRIPTOR = _IP4OVER6,
  __module__ = 'ip4over6_pb2'
  # @@protoc_insertion_point(class_scope:OstProto.Ip4over6)
  ))
_sym_db.RegisterMessage(Ip4over6)

ip4over6.message_type = _IP4OVER6
protocol_pb2.Protocol.RegisterExtension(ip4over6)

# @@protoc_insertion_point(module_scope)
